<!DOCTYPE html>
<html>
<head>
  <title>Office Check-In</title>
  <script src="https://static.line-scdn.net/liff/edge/2/sdk.js"></script>
  <style>
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.5);
    }
    .modal-content {
      background: white;
      padding: 20px;
      width: 300px;
      margin: 100px auto;
    }
  </style>
</head>
<body>
  <!-- Main Interface -->
  <div id="mainApp" style="display: none;">
    <h1>Office Check-In</h1>
    <button onclick="checkIn()">Check In</button>
    <button onclick="checkOut()">Check Out</button>
  </div>

  <!-- Registration Modal -->
  <div id="registrationModal" class="modal">
    <div class="modal-content">
      <h2>Complete Registration</h2>
      <form onsubmit="handleRegistration(event)">
        <div>
          <label>Full Name:</label>
          <input type="text" id="fullName" required>
        </div>
        <div>
          <label>Department:</label>
          <input type="text" id="department" required>
        </div>
        <button type="submit">Register</button>
      </form>
    </div>
  </div>

  <script>
    let userId = '';
    let displayName = '';

    async function initializeApp() {
      await liff.init({ liffId: 'YOUR_LIFF_ID' });
      
      if (!liff.isLoggedIn()) {
        liff.login();
        return;
      }

      const profile = await liff.getProfile();
      userId = profile.userId;
      displayName = profile.displayName;

      // Check user registration
      const response = await fetch(YOUR_APPSCRIPT_URL, {
        method: 'POST',
        body: JSON.stringify({
          action: 'check_user',
          userId: userId
        })
      });
      
      const result = await response.json();
      if (result.exists) {
        showMainApp();
      } else {
        showRegistrationModal();
      }
    }

    function showMainApp() {
      document.getElementById('mainApp').style.display = 'block';
      document.getElementById('registrationModal').style.display = 'none';
    }

    function showRegistrationModal() {
      document.getElementById('mainApp').style.display = 'none';
      document.getElementById('registrationModal').style.display = 'block';
    }

    async function handleRegistration(e) {
      e.preventDefault();
      
      const name = document.getElementById('fullName').value;
      const department = document.getElementById('department').value;

      try {
        const response = await fetch(YOUR_APPSCRIPT_URL, {
          method: 'POST',
          body: JSON.stringify({
            action: 'register',
            userId: userId,
            displayName: displayName,
            name: name,
            department: department
          })
        });

        const result = await response.json();
        if (result.status === 'success') {
          showMainApp();
        } else {
          alert('Registration failed. Please try again.');
        }
      } catch (err) {
        alert('Error: ' + err.message);
      }
    }

    // Location and Check Functions
    async function getLocation(type) {
      return new Promise((resolve, reject) => {
        navigator.geolocation.getCurrentPosition(
          position => resolve(position.coords),
          error => reject(error),
          { enableHighAccuracy: true }
        );
      });
    }

    async function sendCheckData(type, coords) {
      const response = await fetch(YOUR_APPSCRIPT_URL, {
        method: 'POST',
        body: JSON.stringify({
          type: type,
          userId: userId,
          lat: coords.latitude,
          lon: coords.longitude
        })
      });
      return response.json();
    }

    async function checkIn() {
      try {
        const coords = await getLocation('in');
        const result = await sendCheckData('in', coords);
        alert(result.status === 'success' ? 'Checked in!' : result.message);
      } catch (err) {
        alert('Error: ' + err.message);
      }
    }

    async function checkOut() {
      try {
        const coords = await getLocation('out');
        const result = await sendCheckData('out', coords);
        alert(result.status === 'success' ? 'Checked out!' : result.message);
      } catch (err) {
        alert('Error: ' + err.message);
      }
    }

    // Initialize application
    initializeApp().catch(err => {
      console.error(err);
      alert('Error initializing application');
    });
  </script>
</body>
</html>
